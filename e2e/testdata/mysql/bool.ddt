exec silent
mysql -u user -p'password'  -h '0.0.0.0' -P 3306 --database=defaultdb --execute="DROP TABLE IF EXISTS bool_table; CREATE TABLE bool_table (id SERIAL PRIMARY KEY, bool_col BOOL);"
----

# This is needed, otherwise you might encounter a failed to export snapshot: please ensure that you have GTID-based replication enabled: Error 1142 (42000): SELECT command denied to user 'user'@'xx.xx.xx.xx' for table 'gtid_executed' error
exec silent
docker exec -t github-mysql-1 mysql -u root -e 'GRANT FILE, SELECT on *.* to user;'
----

exec silent
docker cp ../.github/e2esampledata/mysql_bool.csv  github-mysql-1:/var/lib/mysql-files
----

exec silent
mysql -u user -p'password'  -h '0.0.0.0' -P 3306 --database=defaultdb --execute="LOAD DATA INFILE '/var/lib/mysql-files/mysql_bool.csv'  INTO TABLE bool_table  FIELDS TERMINATED BY ','  ENCLOSED BY '\"' LINES TERMINATED BY '\n' IGNORE 1 ROWS;"
----

exec
mysql -u user -p'password'  -h '0.0.0.0' -P 3306 --database=defaultdb --execute="INSERT INTO bool_table VALUES (3, true), (4, false)"
----

exec
mysql -u user -p'password'  -h '0.0.0.0' -P 3306 --database=defaultdb --execute="SELECT * FROM bool_table"
----
id	bool_col
1	1
2	0
3	1
4	0

# Automatically create the schema -- the column in the target db will be mapped to INT2, as BOOL column is essentially of TINYINT in MySQL.
fetch --source 'mysql://user:password@0.0.0.0:3306/defaultdb' --target 'postgres://root@localhost:26257/defaultdb?sslmode=disable' --table-filter 'bool_table' --table-handling 'drop-on-target-and-recreate' --local-path /tmp/basic --local-path-listen-addr '0.0.0.0:9115'  --cleanup=true --non-interactive
----
{"level":"info","message":"default compression to GZIP"}
{"level":"info","message":"checking database details"}
{"level":"info","message":"creating schema for tables: [public.bool_table]"}
{"level":"info","message":"getting column types for table: public.bool_table"}
{"level":"info","message":"finished getting column types for table: public.bool_table"}
{"level":"info","message":"creating new table with \"CREATE TABLE bool_table (id INT8 NOT NULL PRIMARY KEY, bool_col INT2)\""}
{"level":"info","message":"after recreating table, dbTables: {[[public.bool_table public.bool_table]] [] []}"}
{"level":"info","message":"verifying common tables"}
{"level":"info","message":"establishing snapshot"}
{"level":"info","type":"summary","num_tables":1,"cdc_cursor":"0/19E3610","message":"starting fetch"}
{"level":"warn","message":"clearing all continuation tokens because running in clear continuation mode"}
{"level":"info","message":"data extraction phase starting"}
{"level":"info","type":"summary","num_rows":4,"export_duration_ms":1000,"export_duration":"000h 00m 01s","message":"data extraction from source complete"}
{"level":"info","message":"starting data import on target"}
{"level":"info","message":"imported 4 rows for batch for files 1 to 1"}
{"level":"info","type":"summary","net_duration_ms":1000,"net_duration":"000h 00m 01s","import_duration_ms":1000,"import_duration":"000h 00m 01s","export_duration_ms":1000,"export_duration":"000h 00m 01s","num_rows":4,"cdc_cursor":"0/19E3610","message":"data import on target for table complete"}
{"level":"info","message":"cleaning up resources created during fetch run"}
{"level":"info","type":"summary","fetch_id":"0000000000","num_tables":1,"tables":["public.bool_table"],"cdc_cursor":"0/19E3610","net_duration_ms":1000,"net_duration":"000h 00m 01s","message":"fetch complete"}
{"level":"info","message":"http server intentionally shut down"}


verify --source 'mysql://user:password@0.0.0.0:3306/defaultdb' --target 'postgres://root@localhost:26257/defaultdb?sslmode=disable' --table-filter 'bool_table'
----
{"level":"info","message":"verification in progress"}
{"level":"info","message":"starting verify on public.bool_table, shard 1/1"}
{"level":"info","type":"summary","table_schema":"public","table_name":"bool_table","num_truth_rows":4,"num_success":4,"num_conditional_success":0,"num_missing":0,"num_mismatch":0,"num_extraneous":0,"num_live_retry":0,"num_column_mismatch":0,"message":"finished row verification on public.bool_table (shard 1/1)"}
{"level":"info","net_duration_ms":1000,"net_duration":"000h 00m 01s","message":"verification complete"}


exec
psql 'postgres://root@localhost:26257/defaultdb?sslmode=disable' -c "SHOW CREATE TABLE bool_table"
----
table_name |                    create_statement                     
------------+---------------------------------------------------------
 bool_table | CREATE TABLE public.bool_table (                       +
            |         id INT8 NOT NULL,                              +
            |         bool_col INT2 NULL,                            +
            |         CONSTRAINT bool_table_pkey PRIMARY KEY (id ASC)+
            | )
(1 row)

exec
psql 'postgres://root@localhost:26257/defaultdb?sslmode=disable' -c "SELECT * FROM bool_table"
----
id | bool_col 
----+----------
  1 |        1
  2 |        0
  3 |        1
  4 |        0
(4 rows)

# Try the case where we explicitly create a BOOL column in CRDB.
exec silent
psql 'postgres://root@localhost:26257/defaultdb?sslmode=disable' -c "DROP TABLE IF EXISTS bool_table; CREATE TABLE bool_table (id SERIAL PRIMARY KEY, bool_col BOOL);"
----

fetch --source 'mysql://user:password@0.0.0.0:3306/defaultdb' --target 'postgres://root@localhost:26257/defaultdb?sslmode=disable' --table-filter 'bool_table'  --local-path /tmp/basic --local-path-listen-addr '0.0.0.0:9115'  --cleanup=true --non-interactive
----
{"level":"info","message":"default compression to GZIP"}
{"level":"info","message":"checking database details"}
{"level":"info","source_table":"public.bool_table","target_table":"public.bool_table","message":"found matching table"}
{"level":"info","message":"verifying common tables"}
{"level":"info","message":"establishing snapshot"}
{"level":"info","type":"summary","num_tables":1,"cdc_cursor":"0/19E3610","message":"starting fetch"}
{"level":"warn","message":"clearing all continuation tokens because running in clear continuation mode"}
{"level":"info","message":"data extraction phase starting"}
{"level":"info","type":"summary","num_rows":4,"export_duration_ms":1000,"export_duration":"000h 00m 01s","message":"data extraction from source complete"}
{"level":"info","message":"starting data import on target"}
{"level":"info","message":"imported 4 rows for batch for files 1 to 1"}
{"level":"info","type":"summary","net_duration_ms":1000,"net_duration":"000h 00m 01s","import_duration_ms":1000,"import_duration":"000h 00m 01s","export_duration_ms":1000,"export_duration":"000h 00m 01s","num_rows":4,"cdc_cursor":"0/19E3610","message":"data import on target for table complete"}
{"level":"info","message":"cleaning up resources created during fetch run"}
{"level":"info","type":"summary","fetch_id":"0000000000","num_tables":1,"tables":["public.bool_table"],"cdc_cursor":"0/19E3610","net_duration_ms":1000,"net_duration":"000h 00m 01s","message":"fetch complete"}
{"level":"info","message":"http server intentionally shut down"}

exec
psql 'postgres://root@localhost:26257/defaultdb?sslmode=disable' -c "SELECT * FROM bool_table"
----
id | bool_col 
----+----------
  1 | t
  2 | f
  3 | t
  4 | f
(4 rows)

verify --source 'mysql://user:password@0.0.0.0:3306/defaultdb' --target 'postgres://root@localhost:26257/defaultdb?sslmode=disable' --table-filter 'bool_table'
----
{"level":"info","message":"verification in progress"}
{"level":"info","message":"starting verify on public.bool_table, shard 1/1"}
{"level":"info","type":"summary","table_schema":"public","table_name":"bool_table","num_truth_rows":4,"num_success":4,"num_conditional_success":0,"num_missing":0,"num_mismatch":0,"num_extraneous":0,"num_live_retry":0,"num_column_mismatch":0,"message":"finished row verification on public.bool_table (shard 1/1)"}
{"level":"info","net_duration_ms":1000,"net_duration":"000h 00m 01s","message":"verification complete"}
