// Code generated by goa v3.14.1, DO NOT EDIT.
//
// moltservice service
//
// Command:
// $ goa gen github.com/cockroachdb/molt/moltservice/design -o ./moltservice

package moltservice

import (
	"context"
)

// MOLT service performs operations using MOLT tooling
type Service interface {
	// CreateFetchTask implements create_fetch_task.
	CreateFetchTask(context.Context, *CreateFetchPayload) (res FetchAttemptID, err error)
	// GetFetchTasks implements get_fetch_tasks.
	GetFetchTasks(context.Context) (res []*FetchRun, err error)
	// GetSpecificFetchTask implements get_specific_fetch_task.
	GetSpecificFetchTask(context.Context, *GetSpecificFetchTaskPayload) (res *FetchRunDetailed, err error)
	// CreateVerifyTaskFromFetch implements create_verify_task_from_fetch.
	CreateVerifyTaskFromFetch(context.Context, *CreateVerifyTaskFromFetchPayload) (res VerifyAttemptID, err error)
	// GetVerifyTasks implements get_verify_tasks.
	GetVerifyTasks(context.Context) (res []*VerifyRun, err error)
	// GetSpecificVerifyTask implements get_specific_verify_task.
	GetSpecificVerifyTask(context.Context, *GetSpecificVerifyTaskPayload) (res *VerifyRunDetailed, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "moltservice"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [6]string{"create_fetch_task", "get_fetch_tasks", "get_specific_fetch_task", "create_verify_task_from_fetch", "get_verify_tasks", "get_specific_verify_task"}

// CreateFetchPayload is the payload type of the moltservice service
// create_fetch_task method.
type CreateFetchPayload struct {
	// source database connection string
	SourceConn string
	// target database connection string
	TargetConn string
	// Mode of operation for fetch
	Mode string
	// Type of intermediary store
	Store string
	// whether the intermediate store should be cleaned up after the fetch task
	CleanupIntermediaryStore bool
	// the absolute or relative path to write export files
	LocalPath string
	// the local address where the file server will be spun up
	LocalPathListenAddress string
	// the local address CRDB will use to access the import files
	LocalPathCrdbAddress string
	// the local address CRDB will use to access the import files
	BucketName string
	// the sub-path within the bucket to write the export files
	BucketPath string
	// if specified, writes task execution logs to a file and stdout; otherwise,
	// just writes to stdout
	LogFile string
	// if specified, truncates the target tables before running the data load
	Truncate bool
	// compression type
	Compression string
	// number of rows for the export before data is flushed to the disk (persisted)
	NumFlushRows int
	// number of bytes for the export before data is flushed to the disk
	NumFlushBytes int
	// number of tables to process at the same time; this is usually sized based on
	// number of CPUs
	NumConcurrentTables int
	// number of rows to export at a given time for each iteration; tune this so
	// that you get most out of CPU and can batch the most data together
	NumBatchRowsExport int
	// name for pg replication slot
	PgLogicalSlotName string
	// name for pg replication plugin
	PgLogicalPlugin string
	// if set and exists, drops the existing replication slot
	PgDropSlot bool
	// the name of the fetch run
	Name string
}

// CreateVerifyTaskFromFetchPayload is the payload type of the moltservice
// service create_verify_task_from_fetch method.
type CreateVerifyTaskFromFetchPayload struct {
	// id for the fetch task
	ID int
}

// FetchAttemptID is the result type of the moltservice service
// create_fetch_task method.
type FetchAttemptID int

type FetchRun struct {
	// ID of the run
	ID int
	// name of the fetch run
	Name string
	// status of the fetch run
	Status string
	// started at time
	StartedAt int
	// finished at time
	FinishedAt int
}

// FetchRunDetailed is the result type of the moltservice service
// get_specific_fetch_task method.
type FetchRunDetailed struct {
	// ID of the run
	ID int
	// name of the fetch run
	Name string
	// status of the fetch run
	Status string
	// started at time
	StartedAt int
	// finished at time
	FinishedAt int
	// fetch statistics
	Stats *FetchStatsDetailed
	// logs for fetch run
	Logs []*Log
	// verify runs linked to fetch runs
	VerifyRuns []*VerifyRun
}

type FetchStatsDetailed struct {
	// percentage complete of fetch run
	PercentComplete string
	// number of errors processed
	NumErrors int
	// number of tables processed
	NumTables int
	// number of rows
	NumRows int
	// net duration in milliseconds
	NetDurationMs float64
	// import duration in milliseconds
	ImportDurationMs float64
	// export duration in milliseconds
	ExportDurationMs float64
	// CDC cursor
	CdcCursor string
}

// GetSpecificFetchTaskPayload is the payload type of the moltservice service
// get_specific_fetch_task method.
type GetSpecificFetchTaskPayload struct {
	// id for the fetch task
	ID int
}

// GetSpecificVerifyTaskPayload is the payload type of the moltservice service
// get_specific_verify_task method.
type GetSpecificVerifyTaskPayload struct {
	// id for the verify task
	ID int
}

type Log struct {
	// timestamp of log
	Timestamp int
	// level for logging
	Level string
	// message for the logging
	Message string
}

// VerifyAttemptID is the result type of the moltservice service
// create_verify_task_from_fetch method.
type VerifyAttemptID int

type VerifyMismatch struct {
	// timestamp of log
	Timestamp int
	// level for logging
	Level string
	// message for the logging
	Message string
	// schema for the db
	Schema string
	// name of the table
	Table string
	// type of mismatch
	Type string
}

type VerifyRun struct {
	// ID of the run
	ID int
	// name of the run
	Name string
	// status of the run
	Status string
	// started at time
	StartedAt int
	// finished at time
	FinishedAt int
	// ID of the associated fetch run
	FetchID int
}

// VerifyRunDetailed is the result type of the moltservice service
// get_specific_verify_task method.
type VerifyRunDetailed struct {
	// ID of the run
	ID int
	// name of the run
	Name string
	// status of the run
	Status string
	// started at time
	StartedAt int
	// finished at time
	FinishedAt int
	// ID of the associated fetch run
	FetchID int
	// verify statistics
	Stats *VerifyStatsDetailed
	// verify mismatches (i.e. data mismatches, missing rows)
	Mismatches []*VerifyMismatch
}

type VerifyStatsDetailed struct {
	// number of tables processed
	NumTables int
	// number of rows processed
	NumTruthRows int
	// number of successful rows processed
	NumSuccess int
	// number of rows that had conditional success
	NumConditionalSuccess int
	// number of missing rows
	NumMissing int
	// number of mismatching rows
	NumMismatch int
	// number of extraneous rows
	NumExtraneous int
	// number of live retries
	NumLiveRetry int
	// number column mismatches
	NumColumnMismatch int
	// net duration in milliseconds
	NetDurationMs float64
}
