swagger: "2.0"
info:
    title: MOLT Service
    description: Service for coordinating between clients (CLI + Web UI) and MOLT tooling
    version: ""
host: localhost:4500
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /api/v1/fetch:
        post:
            tags:
                - moltservice
            summary: create_fetch_task moltservice
            operationId: moltservice#create_fetch_task
            parameters:
                - name: create_fetch_task_request_body
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/MoltserviceCreateFetchTaskRequestBody'
                    required:
                        - source_conn
                        - target_conn
                        - mode
                        - store
                        - cleanup_intermediary_store
                        - local_path
                        - local_path_listen_address
                        - local_path_crdb_address
                        - bucket_name
                        - bucket_path
                        - log_file
                        - truncate
                        - compression
                        - num_flush_rows
                        - num_flush_bytes
                        - num_concurrent_tables
                        - num_batch_rows_export
                        - pg_logical_slot_name
                        - pg_logical_plugin
                        - pg_drop_slot
                        - name
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: integer
                        format: int64
            schemes:
                - http
    /docs.html:
        get:
            tags:
                - moltservice
            summary: Download ./assets/docs.html
            operationId: moltservice#/docs.html
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
    /openapi.json:
        get:
            tags:
                - moltservice
            summary: Download ./gen/http/openapi.json
            operationId: moltservice#/openapi.json
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
definitions:
    MoltserviceCreateFetchTaskRequestBody:
        title: MoltserviceCreateFetchTaskRequestBody
        type: object
        properties:
            bucket_name:
                type: string
                description: the local address CRDB will use to access the import files
                example: http://localhost:5000
            bucket_path:
                type: string
                description: the sub-path within the bucket to write the export files
                example: fetch/export
            cleanup_intermediary_store:
                type: boolean
                description: whether the intermediate store should be cleaned up after the fetch task
                example: true
            compression:
                type: string
                description: compression type
                example: none
                enum:
                    - gzip
                    - none
            local_path:
                type: string
                description: the absolute or relative path to write export files
                example: /usr/Documents/fetch
            local_path_crdb_address:
                type: string
                description: the local address CRDB will use to access the import files
                example: http://localhost:5000
            local_path_listen_address:
                type: string
                description: the local address where the file server will be spun up
                example: http://localhost:5000
            log_file:
                type: string
                description: if specified, writes task execution logs to a file and stdout; otherwise, just writes to stdout
                example: task.log
            mode:
                type: string
                description: Mode of operation for fetch
                example: DIRECT_COPY
                enum:
                    - IMPORT_INTO
                    - COPY_FROM
                    - DIRECT_COPY
            name:
                type: string
                description: the name of the fetch run
                example: rluu pg to cockroach
            num_batch_rows_export:
                type: integer
                description: number of rows to export at a given time for each iteration; tune this so that you get most out of CPU and can batch the most data together
                example: 100000
                format: int64
            num_concurrent_tables:
                type: integer
                description: number of tables to process at the same time; this is usually sized based on number of CPUs
                example: 4
                format: int64
            num_flush_bytes:
                type: integer
                description: number of bytes for the export before data is flushed to the disk
                example: 2000
                format: int64
            num_flush_rows:
                type: integer
                description: number of rows for the export before data is flushed to the disk (persisted)
                example: 200000
                format: int64
            pg_drop_slot:
                type: boolean
                description: if set and exists, drops the existing replication slot
                example: false
            pg_logical_plugin:
                type: string
                description: name for pg replication plugin
                example: my_plugin
            pg_logical_slot_name:
                type: string
                description: name for pg replication slot
                example: my_slot
            source_conn:
                type: string
                description: source database connection string
                example: postgres://postgres:postgres@localhost:5432/molt?sslmode=disable
            store:
                type: string
                description: Type of intermediary store
                example: Local
                enum:
                    - None
                    - AWS
                    - GCP
                    - Local
            target_conn:
                type: string
                description: target database connection string
                example: postgres://root@localhost:26257/defaultdb?sslmode=disable
            truncate:
                type: boolean
                description: if specified, truncates the target tables before running the data load
                example: true
        example:
            bucket_name: http://localhost:5000
            bucket_path: fetch/export
            cleanup_intermediary_store: true
            compression: none
            local_path: /usr/Documents/fetch
            local_path_crdb_address: http://localhost:5000
            local_path_listen_address: http://localhost:5000
            log_file: task.log
            mode: DIRECT_COPY
            name: rluu pg to cockroach
            num_batch_rows_export: 100000
            num_concurrent_tables: 4
            num_flush_bytes: 2000
            num_flush_rows: 200000
            pg_drop_slot: false
            pg_logical_plugin: my_plugin
            pg_logical_slot_name: my_slot
            source_conn: postgres://postgres:postgres@localhost:5432/molt?sslmode=disable
            store: Local
            target_conn: postgres://root@localhost:26257/defaultdb?sslmode=disable
            truncate: true
        required:
            - source_conn
            - target_conn
            - mode
            - store
            - cleanup_intermediary_store
            - local_path
            - local_path_listen_address
            - local_path_crdb_address
            - bucket_name
            - bucket_path
            - log_file
            - truncate
            - compression
            - num_flush_rows
            - num_flush_bytes
            - num_concurrent_tables
            - num_batch_rows_export
            - pg_logical_slot_name
            - pg_logical_plugin
            - pg_drop_slot
            - name
