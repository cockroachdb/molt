// Code generated by goa v3.14.1, DO NOT EDIT.
//
// moltservice client HTTP transport
//
// Command:
// $ goa gen github.com/cockroachdb/molt/moltservice/design -o ./moltservice

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the moltservice service endpoint HTTP clients.
type Client struct {
	// CreateFetchTask Doer is the HTTP client used to make requests to the
	// create_fetch_task endpoint.
	CreateFetchTaskDoer goahttp.Doer

	// GetFetchTasks Doer is the HTTP client used to make requests to the
	// get_fetch_tasks endpoint.
	GetFetchTasksDoer goahttp.Doer

	// GetSpecificFetchTask Doer is the HTTP client used to make requests to the
	// get_specific_fetch_task endpoint.
	GetSpecificFetchTaskDoer goahttp.Doer

	// CreateVerifyTaskFromFetch Doer is the HTTP client used to make requests to
	// the create_verify_task_from_fetch endpoint.
	CreateVerifyTaskFromFetchDoer goahttp.Doer

	// GetVerifyTasks Doer is the HTTP client used to make requests to the
	// get_verify_tasks endpoint.
	GetVerifyTasksDoer goahttp.Doer

	// CORS Doer is the HTTP client used to make requests to the  endpoint.
	CORSDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the moltservice service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		CreateFetchTaskDoer:           doer,
		GetFetchTasksDoer:             doer,
		GetSpecificFetchTaskDoer:      doer,
		CreateVerifyTaskFromFetchDoer: doer,
		GetVerifyTasksDoer:            doer,
		CORSDoer:                      doer,
		RestoreResponseBody:           restoreBody,
		scheme:                        scheme,
		host:                          host,
		decoder:                       dec,
		encoder:                       enc,
	}
}

// CreateFetchTask returns an endpoint that makes HTTP requests to the
// moltservice service create_fetch_task server.
func (c *Client) CreateFetchTask() goa.Endpoint {
	var (
		encodeRequest  = EncodeCreateFetchTaskRequest(c.encoder)
		decodeResponse = DecodeCreateFetchTaskResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildCreateFetchTaskRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateFetchTaskDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("moltservice", "create_fetch_task", err)
		}
		return decodeResponse(resp)
	}
}

// GetFetchTasks returns an endpoint that makes HTTP requests to the
// moltservice service get_fetch_tasks server.
func (c *Client) GetFetchTasks() goa.Endpoint {
	var (
		decodeResponse = DecodeGetFetchTasksResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildGetFetchTasksRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetFetchTasksDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("moltservice", "get_fetch_tasks", err)
		}
		return decodeResponse(resp)
	}
}

// GetSpecificFetchTask returns an endpoint that makes HTTP requests to the
// moltservice service get_specific_fetch_task server.
func (c *Client) GetSpecificFetchTask() goa.Endpoint {
	var (
		decodeResponse = DecodeGetSpecificFetchTaskResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildGetSpecificFetchTaskRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetSpecificFetchTaskDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("moltservice", "get_specific_fetch_task", err)
		}
		return decodeResponse(resp)
	}
}

// CreateVerifyTaskFromFetch returns an endpoint that makes HTTP requests to
// the moltservice service create_verify_task_from_fetch server.
func (c *Client) CreateVerifyTaskFromFetch() goa.Endpoint {
	var (
		decodeResponse = DecodeCreateVerifyTaskFromFetchResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildCreateVerifyTaskFromFetchRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateVerifyTaskFromFetchDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("moltservice", "create_verify_task_from_fetch", err)
		}
		return decodeResponse(resp)
	}
}

// GetVerifyTasks returns an endpoint that makes HTTP requests to the
// moltservice service get_verify_tasks server.
func (c *Client) GetVerifyTasks() goa.Endpoint {
	var (
		decodeResponse = DecodeGetVerifyTasksResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildGetVerifyTasksRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetVerifyTasksDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("moltservice", "get_verify_tasks", err)
		}
		return decodeResponse(resp)
	}
}
